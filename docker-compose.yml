version: '3.8'

services:
  media-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://media_user:media_password@postgres:5432/media_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-key
      - ENCRYPTION_KEY=your-encryption-key
      - GCS_BUCKET_NAME=whispr-media-dev
      - GCS_PROJECT_ID=whispr-project
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
    networks:
      - media-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=media_db
      - POSTGRES_USER=media_user
      - POSTGRES_PASSWORD=media_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - media-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - media-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - media-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - media-network

volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  media-network:
    driver: bridge